// *
// * Helper Classes
// *

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Constrain
// * FOR: Constraining content width at mobile and tablet breakpoints
// * WHY: Not all elements are 100% wide
// * USE: @include constrain;
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin constrain {
  width: 84.375%; // 270px/320px
  margin-left: auto;
  margin-right: auto;
  @media screen and (min-width: $tablet-breakpoint) {
    width: 94%;
  }
  @media screen and (min-width: $desktop-breakpoint) {
    width: 100%;
  }
}

@mixin unconstrain {
  width: 100%;
  margin-left: 0;
  margin-right: 0;
}

%clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

.page--section%opaque-background,
.page--section %opaque-background {
  background-color: color(gray, xx-light);
}

%opaque-background {
  background-color: color(white);
}


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Link States
// * FOR: So link state color declarations
// * WHY: Breaking out each state on a module takes up a lot of space
// * USE: @include link-states(color(red), color(red, light), color(red, light));
//    - Accepts color values from the color function from _colors.scss
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin link-states($normal, $hover:false, $active:false, $visited:false)
{
  color: $normal;
  @if $visited {
    &:visited {
      color: $visited;
    }
  }
  @if $hover {
    &:hover {
      color: $hover;
    }
  }
  @if $active {
    &:active,
    &:focus {
      color: $active;
    }
  }
}


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Media Query
// * FOR: Writing css specific to particular breakpoints
// * WHY: Standardizes breakpoint sizes
// * USE: @include media-query($) {...};
//    - Acceptable arguments: `tablet`, `desktop`, or an integer
// * Shout out to http://css-tricks.com/media-queries-sass-3-2-and-codekit/
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin media-query($breakpoint) {

  @if $breakpoint == tablet {
    @media (min-width: $tablet-breakpoint) { @content; }
  }
  @else if $breakpoint == desktop {
    @media (min-width: $desktop-breakpoint) { @content; }
  }
  @else if round($breakpoint) == $breakpoint {
    @media (min-width: #{$breakpoint}px) { @content; }
  }

}

@mixin media-query--retina {
  @media only screen and (-webkit-min-device-pixel-ratio: 1.3),
  only screen and (-o-min-device-pixel-ratio: 13/10),
  only screen and (min-resolution: 120dpi) {
    @content;
  }
}


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Sprite Position for Retina
// * FOR: setting the background position and background size to half
// * WHY: the retina sprite is twice the size so this displays it correctly
// * USE: @include sprite-retina($);
// * The non-retina version of this mixin lives in the _bdc-sprite-position.scss
//   and is generated by the grunt task 'grunt bdc-sprite'
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

@mixin sprite--retina($sprite) {
  background-position: map-get($sprite, 'offset_x')/2 map-get($sprite, 'offset_y')/2;
  background-size: map-get($sprite, 'total_width')/2 map-get($sprite, 'total_height')/2;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Visually Hidden
// * FOR: hiding content visually, but not from screenreaders/scrapers
// * WHY: Skipnav and other acessibility concerns
// * USE: @extend .visuallyhidden
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// Ad Slots
// * FOR: Genereal Ad Slot Styling
// * WHY: Consistant use of this element
// * USE: @extend .adSlots
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

.overlays {
  .iconOverlay {
    position: absolute;
    z-index: 1;
  }
  .topSpacing {
    top: 3%;
  }
  .leftSpacing {
    left: 6%;
  }
}

.adSlots {
  margin: auto;
  display: block;
  min-height: 250px;
  overflow: hidden;
  clear: both;
  
  .adSlot {
    display: block;
    width: 300px;
    height: 250px;
    margin: 0;
    margin: auto;
    position: relative;

    /*border: 1px solid #ccc;*/
    margin-bottom: 30px;

    .category-tag {
      position: absolute;
      z-index: 101;
    }
    
    @extend .overlays;
    
    .detailsWrapper {
      width: 100%;
      clear: both;
      min-height: 10%;
      overflow: hidden;
      position: absolute;
      bottom: 0;
      left: 0;
      z-index: 1;

      .detailsArrow{
        width: 0;
        height: 0;
        border-style: solid;
        border-width: 0 25px 20px 25px;
        border-color: rgba(0, 0, 0, 0.6) transparent;
        float: right;
      }

      .detailsOverlay {
        width: 93%;
        min-height: 20%;
        padding: 4% 5% 3% 3%;
        color: #fff;
        font-size: 0.7em;
        letter-spacing: 1px;
        font-family: 'Oswald', sans-serif;
        font-weight: 300;
        background-color: rgba(0, 0, 0, 0.6);
        clear: both;

        h1 {
          font-size: 120%;
          text-align: left;
          padding: 0 0 0.5em 0;
          margin: 0 0 0 0;
          line-height: 100%;
          clear: both;
          min-height: 10px;
          overflow: hidden;

          .priceSpan {
            float: right;
          }
        }
        p {
          display: none;
          line-height: 1.5em;
          padding: 0 0 0.5em 0;
          margin: 0 0 0 0;
        }
      }
    }
  }
    .adSlot:hover .detailsWrapper .detailsOverlay p {
      display: block;
    }
}



@include media-query(desktop) {
  .adSlots {
    .adSlot {
      float: left;
      margin-right: 0px;
    }
    .adSlot:first-child {
      float: left;
      margin-right: 30px;
    }

    a.adSlot:first-child{
      margin: 0px;
    }
  }
}

@include media-query(tablet) {
  .adSlots {
    .adSlot {
      float: left;
      margin-left: 30px;
    }

    a.adSlot:first-child{
      margin-left: 0;
    }
  }
}


